/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.workoutrecord;

import domain.Activity;
import domain.Client;
import domain.Trainer;
import domain.WorkoutItem;
import domain.WorkoutRecord;
import enums.Category;
import enums.Measurement;
import form.activity.AddActivityDialog;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.text.html.HTML;
import logic.ClientController;
import model.WorkoutItemTableModel;

/**
 *
 * @author pc
 */
public class AddWorkoutRecordDialog extends javax.swing.JDialog {

    private Trainer trainer;
    private Client client;
    private LinkedList<Activity> activities;
    private WorkoutRecord workoutRecord = null;

    int itemId = 1;

    /**
     * Creates new form AddWorkoutRecordDialog
     */
    public AddWorkoutRecordDialog(java.awt.Frame parent, boolean modal, Trainer trainer, Client client, WorkoutRecord workoutRecord) {
        super(parent, modal);
        initComponents();
        this.trainer = trainer;
        this.client = client;
        this.workoutRecord = workoutRecord;
        fillCategories();
        cmbActivity.setModel(new DefaultComboBoxModel<String>());
        txtClientName.setText(client.getName() + " " + client.getLastName());
        tblItems.setModel(new WorkoutItemTableModel());
        txtTrainer.setEditable(false);
        configureSpinFields();
        if (workoutRecord == null) {
            txtTrainer.setVisible(false);
            lblTrainer.setVisible(false);
            btnEnableEditing.setVisible(false);
        } else {
            toggleEditing(false);
            fillWorkoutRecordInfo();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtClientName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnAddItem = new javax.swing.JButton();
        cmbActivity = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();
        btnCreateNewActivity = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        sfNumOfSeries = new com.toedter.components.JSpinField();
        jLabel12 = new javax.swing.JLabel();
        sfWeight = new com.toedter.components.JSpinField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        radioMedium = new javax.swing.JRadioButton();
        radioLow = new javax.swing.JRadioButton();
        radioHigh = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        btnDeleteItem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        calendar = new com.toedter.calendar.JCalendar();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sfStartHour = new com.toedter.components.JSpinField();
        sfStartMinute = new com.toedter.components.JSpinField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        sfEndHour = new com.toedter.components.JSpinField();
        jLabel9 = new javax.swing.JLabel();
        sfEndMinute = new com.toedter.components.JSpinField();
        jLabel10 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEnableEditing = new javax.swing.JButton();
        txtTrainer = new javax.swing.JTextField();
        lblTrainer = new javax.swing.JLabel();

        jLabel15.setText("jLabel15");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Klijent:");

        txtClientName.setEditable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAddItem.setText("Dodaj stavku");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        cmbActivity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Aktivnost");

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });

        jLabel2.setText("Kategorija aktivnosti");

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblItems);

        btnCreateNewActivity.setText("Kreiraj novu aktivnost");
        btnCreateNewActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActivityActionPerformed(evt);
            }
        });

        jLabel11.setText("Broj serija");

        jLabel12.setText("Kilaza");

        txtComment.setColumns(20);
        txtComment.setRows(5);
        jScrollPane2.setViewportView(txtComment);

        jLabel13.setText("Komentar");

        buttonGroup1.add(radioMedium);
        radioMedium.setText("Srednji");

        buttonGroup1.add(radioLow);
        radioLow.setSelected(true);
        radioLow.setText("Nizak");

        buttonGroup1.add(radioHigh);
        radioHigh.setText("Visok");
        radioHigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHighActionPerformed(evt);
            }
        });

        jLabel14.setText("Intenzitet");

        btnDeleteItem.setText("Obrisi stavku");
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(cmbActivity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCreateNewActivity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(sfWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sfNumOfSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(radioLow, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(radioMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDeleteItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAddItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel11)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel13)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sfNumOfSeries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCategory))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sfWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbActivity)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioLow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioMedium)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioHigh)))
                .addGap(18, 18, 18)
                .addComponent(btnAddItem)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateNewActivity)
                    .addComponent(btnDeleteItem))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setText("Datum treninga");

        jLabel5.setText("Vreme pocetka");

        jLabel6.setText("Vreme zavrsetka");

        jLabel7.setText("h");

        jLabel8.setText("min");

        jLabel9.setText("h");

        jLabel10.setText("min");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sfEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sfEndMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sfStartHour, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sfStartMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sfStartHour, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sfStartMinute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(sfEndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sfEndMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))))
                .addContainerGap())
        );

        btnCancel.setText("Otkazi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Sacuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEnableEditing.setText("Omoguci izmene");
        btnEnableEditing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnableEditingActionPerformed(evt);
            }
        });

        lblTrainer.setText("Trener");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTrainer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTrainer, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEnableEditing, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTrainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTrainer))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave)
                    .addComponent(btnEnableEditing))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed
        String category = cmbCategory.getItemAt(cmbCategory.getSelectedIndex());
        Activity activity = new Activity();
        try {
            activities = ClientController.getInstance().getAllActivity(activity, "category='" + category + "'");
            fillActivityComboBox();
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_cmbCategoryActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int response = JOptionPane.showConfirmDialog(this, "Da li ste sigurni?", "Potvrda", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION)
            this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        boolean valid = validateEntry();
        if (!valid) {
            System.out.println("nije validan unos");
            return;
        }
//        WorkoutRecord wr = new WorkoutRecord();
//        setAttributes(wr);
        try {
            if (workoutRecord != null) {
                setAttributes(workoutRecord);
                if (ClientController.getInstance().updateWorkoutRecord(workoutRecord)) {
                    JOptionPane.showMessageDialog(this, "Uspesna izmena treninga.");
                    
                }
                else
                    JOptionPane.showMessageDialog(this, "Greska pri izmeni treninga");
                
                
                return;
            }
            WorkoutRecord wr = new WorkoutRecord();
            setAttributes(wr);
            if (ClientController.getInstance().addWorkoutRecord(wr)) {
                
                JOptionPane.showMessageDialog(this, "Uspesno ste dodali trening!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska!", JOptionPane.ERROR);

        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void radioHighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHighActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioHighActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        boolean valid = validateWorkoutItemEntry();
        if (!valid) {
            JOptionPane.showMessageDialog(this, "Vezba mora biti izabrana i broj serija mora biti veci od nula.");
            return;
        }
        WorkoutItem wi = new WorkoutItem();
        wi.setActivity(activities.get(cmbActivity.getSelectedIndex()));
        wi.setMass(sfWeight.getValue());
        wi.setComment(txtComment.getText());
        Measurement measurement;
        if (radioLow.isSelected()) {
            measurement = Measurement.LOW;
        } else if (radioMedium.isSelected()) {
            measurement = Measurement.MODERATE;
        } else {
            measurement = Measurement.HIGH;
        }
        wi.setIntensity(measurement);
        wi.setNumOfSeries(sfNumOfSeries.getValue());
        wi.setItemSN(itemId++);

        ((WorkoutItemTableModel) tblItems.getModel()).add(wi);
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        if (((WorkoutItemTableModel) tblItems.getModel()).getItems().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nema stavki.");
        }
        if (tblItems.getSelectedRow() != -1) {
            LinkedList<WorkoutItem> list=((WorkoutItemTableModel) tblItems.getModel()).getItems();
            int tmp=list.get(tblItems.getSelectedRow()).getItemSN();
            
            ((WorkoutItemTableModel) tblItems.getModel()).removeAt(tblItems.getSelectedRow());
            //1 2 3 4 5 6
            //1   3 4 5 6
            //1 2 3 4 5
            //npr obrisan je broj 2
            //treba svim sledecim smanjiti id za 1
            
            for(int i = tmp-1; i<((WorkoutItemTableModel) tblItems.getModel()).getItems().size();i++){
                list.get(i).setItemSN(list.get(i).getItemSN()-1);
            }
            
            itemId--;
            
        } else
            JOptionPane.showMessageDialog(this, "Izaberite stavku za brisanje.");
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void btnEnableEditingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnableEditingActionPerformed
        if(workoutRecord.getTrainer().getIdTrаiner()!=trainer.getIdTrаiner()){
            JOptionPane.showMessageDialog(this, "Ne mozete izmeniti treninge koji nisu odrzani kod Vas.");
        }
        
        toggleEditing(true);
    }//GEN-LAST:event_btnEnableEditingActionPerformed

    private void btnCreateNewActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActivityActionPerformed
        (new AddActivityDialog(null, true)).setVisible(true);
        cmbCategory.setSelectedIndex(0);
    }//GEN-LAST:event_btnCreateNewActivityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreateNewActivity;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnEnableEditing;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JCalendar calendar;
    private javax.swing.JComboBox<String> cmbActivity;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTrainer;
    private javax.swing.JRadioButton radioHigh;
    private javax.swing.JRadioButton radioLow;
    private javax.swing.JRadioButton radioMedium;
    private com.toedter.components.JSpinField sfEndHour;
    private com.toedter.components.JSpinField sfEndMinute;
    private com.toedter.components.JSpinField sfNumOfSeries;
    private com.toedter.components.JSpinField sfStartHour;
    private com.toedter.components.JSpinField sfStartMinute;
    private com.toedter.components.JSpinField sfWeight;
    private javax.swing.JTable tblItems;
    private javax.swing.JTextField txtClientName;
    private javax.swing.JTextArea txtComment;
    private javax.swing.JTextField txtTrainer;
    // End of variables declaration//GEN-END:variables

    private void fillCategories() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (Category cat : Category.values()) {
            model.addElement(cat.getSerbianName());
        }
        cmbCategory.setModel(model);
        cmbCategory.setSelectedIndex(-1);

    }

    private void fillActivityComboBox() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (Activity activity : activities) {
            model.addElement(activity.getName());
        }
        cmbActivity.setModel(model);
        cmbActivity.setSelectedIndex(-1);
    }

    private void configureSpinFields() {
        sfEndHour.setMinimum(0);
        sfEndMinute.setMinimum(0);
        sfStartHour.setMinimum(0);
        sfStartMinute.setMinimum(0);
        sfEndHour.setMaximum(23);
        sfEndMinute.setMaximum(59);
        sfStartHour.setMaximum(23);
        sfStartMinute.setMaximum(59);
        sfNumOfSeries.setMinimum(1);
        sfWeight.setMinimum(0);

    }

    private boolean validateEntry() {
        String message = String.valueOf("");
        boolean success = true;
        if (((WorkoutItemTableModel) tblItems.getModel()).getItems().isEmpty()) {
            message.concat("[unesite bar jednu stavku]\n");
            success = false;
        }

        int startHour = sfStartHour.getValue();
        int startMinute = sfStartMinute.getValue();
        int endHour = sfEndHour.getValue();
        int endMinute = sfEndMinute.getValue();

        int startTotal = startHour * 60 + startMinute;
        int endTotal = endHour * 60 + endMinute;

        if (startTotal == endTotal) {
            message.concat("[vreme početka i kraja su isti]\n");
            success = false;
        } else if (startTotal > endTotal) {
            message.concat("[vreme početka je posle kraja]\n");
            success = false;
        }
        Date date = calendar.getDate();
        LocalDate localDate = date.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
        if (localDate.isAfter(LocalDate.now())) {
            success = false;
            message.concat("[datum mora biti danas ili ranije]");
        }
        if (!success) {
            JOptionPane.showMessageDialog(this, message);
        }
        return success;
    }

    private void toggleEditing(boolean toggle) {
        cmbActivity.setEnabled(toggle);
        cmbCategory.setEnabled(toggle);
        sfNumOfSeries.setEnabled(toggle);
        sfWeight.setEnabled(toggle);
        sfStartHour.setEnabled(toggle);
        sfStartMinute.setEnabled(toggle);
        sfEndHour.setEnabled(toggle);
        sfEndMinute.setEnabled(toggle);
        txtComment.setEnabled(toggle);
        radioHigh.setEnabled(toggle);
        radioLow.setEnabled(toggle);
        radioMedium.setEnabled(toggle);
        btnAddItem.setEnabled(toggle);
        btnDeleteItem.setEnabled(toggle);
        btnCreateNewActivity.setEnabled(toggle);
        btnSave.setEnabled(toggle);
        calendar.setEnabled(toggle);

    }

    private void setAttributes(WorkoutRecord wr) {
        LinkedList<WorkoutItem> items = ((WorkoutItemTableModel) tblItems.getModel()).getItems();
        LocalTime start = LocalTime.of(sfStartHour.getValue(), sfStartMinute.getValue());
        LocalTime end = LocalTime.of(sfEndHour.getValue(), sfEndMinute.getValue());

        wr.setTrainer(trainer);
        wr.setItems(items);
        wr.setClient(client);
        wr.setEndTime(end);
        wr.setStartTime(start);
        wr.calculateDuration();
        Date date = calendar.getDate();
        LocalDate localDate = date.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
        wr.setWorkoutDate(localDate);
        System.out.println(wr);
    }

    private void fillWorkoutRecordInfo() {
        try {
            txtTrainer.setText(workoutRecord.getTrainer().getName()+ " "+ workoutRecord.getTrainer().getLastName());
            calendar.setDate(Date.from(workoutRecord.getWorkoutDate().atStartOfDay(ZoneId.systemDefault()).toInstant()));
            sfStartHour.setValue(workoutRecord.getStartTime().getHour());
            sfEndHour.setValue(workoutRecord.getEndTime().getHour());
            sfStartMinute.setValue(workoutRecord.getStartTime().getMinute());
            sfEndMinute.setValue(workoutRecord.getEndTime().getMinute());

            LinkedList<WorkoutItem> itemList = ClientController.getInstance().getItemsForWorkoutRecord(workoutRecord);
            for (WorkoutItem wi : itemList) {
                ((WorkoutItemTableModel) tblItems.getModel()).add(wi);
            }
            itemId=itemList.getLast().getItemSN()+1;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace();
        }
    }

    private boolean validateWorkoutItemEntry() {
        if (cmbActivity.getSelectedIndex() == -1) {
            return false;
        }
        if (sfNumOfSeries.getValue() == 0) {
            return false;
        }

        return true;
    }

}
